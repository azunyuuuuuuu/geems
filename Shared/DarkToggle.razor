@inject IJSRuntime JS

<div class="flex fixed bottom-0 left-0 gap-2 p-2">
    <button class="outline outline-1 outline-black/5 shadow rounded bg-neutral-100 dark:bg-neutral-700 hover:bg-neutral-50 dark:hover:bg-neutral-600 text-neutral-900 dark:text-neutral-100 px-2 py-1" @onclick="@(async ()=>await SetDarkMode())">light</button>
    <button class="outline outline-1 outline-black/5 shadow rounded bg-neutral-100 dark:bg-neutral-700 hover:bg-neutral-50 dark:hover:bg-neutral-600 text-neutral-900 dark:text-neutral-100 px-2 py-1" @onclick="@(async ()=>await SetLightMode())">dark</button>
    <button class="outline outline-1 outline-black/5 shadow rounded bg-neutral-100 dark:bg-neutral-700 hover:bg-neutral-50 dark:hover:bg-neutral-600 text-neutral-900 dark:text-neutral-100 px-2 py-1" @onclick="@(async ()=>await SetOsMode())">system</button>
</div>


@code {
    private IJSObjectReference? module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./Shared/DarkToggle.razor.js");
    }

    private async ValueTask<string?> SetDarkMode()
    => module is not null ? await module.InvokeAsync<string>("themeSetDarkMode") : null;
    private async ValueTask<string?> SetLightMode()
    => module is not null ? await module.InvokeAsync<string>("themeSetLightMode") : null;
    private async ValueTask<string?> SetOsMode()
    => module is not null ? await module.InvokeAsync<string>("themeSetOsMode") : null;
}
