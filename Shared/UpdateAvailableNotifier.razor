@inject IJSRuntime _jsRuntime

@* @if (_newVersionAvailable)
{ *@
    <button type="button" class="fixed bottom-8 left-8 right-8 w-fit h-fit mx-auto justify-center px-6 py-4 rounded bg-white/40 text-black backdrop-blur shadow-xl outline outline-1 outline-black/5" onclick="window.location.reload()">
        A new version of the application is available. Tap here to reload.
    </button>
@* } *@

@code {

    private bool _newVersionAvailable = false;

    protected override async Task OnInitializedAsync()
    {
        await RegisterForUpdateAvailableNotification();
    }

    private async Task RegisterForUpdateAvailableNotification()
    {
        await _jsRuntime.InvokeAsync<object>(
        identifier: "registerForUpdateAvailableNotification",
        DotNetObjectReference.Create(this),
        nameof(OnUpdateAvailable));
    }

    [JSInvokable(nameof(OnUpdateAvailable))]
    public Task OnUpdateAvailable()
    {
        _newVersionAvailable = true;

        StateHasChanged();

        return Task.CompletedTask;
    }

}